// Generated by CoffeeScript 1.3.3
var __slice = [].slice;

define(['chaplin/mediator', 'chaplin/lib/support'], function(mediator, support) {
  'use strict';

  var utils;
  utils = {
    beget: (function() {
      var ctor;
      if (typeof Object.create === 'function') {
        return function(obj) {
          return Object.create(obj);
        };
      } else {
        ctor = function() {};
        return function(obj) {
          ctor.prototype = obj;
          return new ctor;
        };
      }
    })(),
    readonly: (function() {
      var readonlyDescriptor;
      if (support.propertyDescriptors) {
        readonlyDescriptor = {
          writable: false,
          enumerable: true,
          configurable: false
        };
        return function() {
          var obj, prop, properties, _i, _len;
          obj = arguments[0], properties = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
          for (_i = 0, _len = properties.length; _i < _len; _i++) {
            prop = properties[_i];
            Object.defineProperty(obj, prop, readonlyDescriptor);
          }
          return true;
        };
      } else {
        return function() {
          return false;
        };
      }
    })(),
    upcase: function(str) {
      return str.charAt(0).toUpperCase() + str.substring(1);
    },
    underscorize: function(string) {
      return string.replace(/[A-Z]/g, function(char, index) {
        return (index !== 0 ? '_' : '') + char.toLowerCase();
      });
    },
    modifierKeyPressed: function(event) {
      return event.shiftKey || event.altKey || event.ctrlKey || event.metaKey;
    }
  };
  if (typeof Object.seal === "function") {
    Object.seal(utils);
  }
  return utils;
});
