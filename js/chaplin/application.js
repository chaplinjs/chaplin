// Generated by CoffeeScript 1.3.3

define(['chaplin/mediator', 'chaplin/dispatcher', 'chaplin/views/layout', 'chaplin/lib/router'], function(mediator, Dispatcher, Layout, Router) {
  'use strict';

  var Application;
  return Application = (function() {

    function Application() {}

    Application.prototype.title = '';

    Application.prototype.dispatcher = null;

    Application.prototype.layout = null;

    Application.prototype.router = null;

    Application.prototype.initialize = function() {
      /*console.debug 'Application#initialize'
      */

    };

    Application.prototype.initDispatcher = function(options) {
      return this.dispatcher = new Dispatcher(options);
    };

    Application.prototype.initLayout = function(options) {
      var _ref;
      if (options == null) {
        options = {};
      }
      if ((_ref = options.title) == null) {
        options.title = this.title;
      }
      return this.layout = new Layout(options);
    };

    Application.prototype.initRouter = function(routes, options) {
      this.router = new Router(options);
      if (typeof routes === "function") {
        routes(this.router.match);
      }
      return this.router.startHistory();
    };

    Application.prototype.disposed = false;

    Application.prototype.dispose = function() {
      /*console.debug 'Application#dispose'
      */

      var prop, properties, _i, _len;
      if (this.disposed) {
        return;
      }
      properties = ['dispatcher', 'layout', 'router'];
      for (_i = 0, _len = properties.length; _i < _len; _i++) {
        prop = properties[_i];
        this[prop].dispose();
        delete this[prop];
      }
      this.disposed = true;
      return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
    };

    return Application;

  })();
});
